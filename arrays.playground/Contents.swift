import UIKit
var s: Array<Int>
var s1: [Int]

var a: [Int] = [5, 6, 7]
print(a)
a.append(5)
print(a)
a.insert(4, at: 1)
print(a)
a.removeAll()
a = [1, 3, 5, 10, 5]
a.removeFirst()//—É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
a.removeLast()//—É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–∂–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
//removeLast –∏ remooveFirst –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —É–¥–∞–ª—è–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç, –ø–æ—ç—Ç–æ–º—É —ç—Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥ –æ–±—Ä–∞–∑–æ–º (–ø—Ä–∏ —ç—Ç–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã)
a = [1, 3, 5, 10, 5]
let b = a.removeFirst()// b = 1
let c = a.removeLast()// c = 5

a = [1, 3, -5, 10, 5, -10, 5]
a.removeFirst(2)//—É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
print(a)
a.removeLast(3)//—É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–∂–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
print("\(a)" + "üëç")

print(a.last)// –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ Optional(10), –æ–ø—Ü–∏–æ–Ω–∞–ª —á—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç –∫–µ–π—Å–∞ –∫–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π
print(a.first)// –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ Optional(5)
print(a)
print(a[0])
print(a[1])
a = [1, 3, -5, 10, 5, -10, 5]
print(a.min())
print(a.max())
print(a.count)
print(a.isEmpty)
a.removeAll()
print(a.isEmpty)

var g = [1, 3, -5, 10, 5, -10, 5]

for element in g {
    print(element)
}// –¥–æ–ª–∂–µ–Ω –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏

var f: [String] = ["A", "B", "C"]
for (index, element) in f.enumerated() {
    print(element + " " + String(index))
}// –¥–æ–ª–∂–µ–Ω –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∏–Ω–¥–µ–∫—Å—ã –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏

func test(num: Int...) {
    for number in num {
        print(number)
    }
}

test (num: 1, -4, 10)
